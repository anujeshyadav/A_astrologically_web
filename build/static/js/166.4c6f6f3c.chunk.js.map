{"version":3,"sources":["components/firbase_config.js","pages/other/LoginRegister.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","i","LoginRegister","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","otpHandler","console","log","state","mobile","axiosConfig","post","parseInt","otp","then","response","data","status","otpMsg","msg","localStorage","setItem","JSON","stringify","token","_id","swal","history","push","catch","error","handlechange","e","preventDefault","value","ConfigureCaptcha","window","recaptchaVerifier","RecaptchaVerifier","size","callback","defaultCountry","onSignInSubmit","loginText","appVerifier","number","signInWithPhoneNumber","confirmationResult","onOtpverify","code","confirm","res","err","document","getElementById","innerText","onResOtpverify","finalstepRes","loginHandler","obj","changeHandler","RegistrationOtpVerify","RegistrationView","scrollTo","Register","FormData","append","fullname","email","gender","city","dob","password","cnfrmpassword","values","keys","key","message","submitHandler","userimg","LayoutOne","headerTop","id","className","Tab","Container","defaultActiveKey","Nav","variant","Item","Link","eventKey","Content","Pane","this","style","color","Form","onSubmit","Input","type","required","placeholder","onChange","maxLength","method","Label","Button","Component"],"mappings":"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","file":"static/js/166.4c6f6f3c.chunk.js","sourcesContent":["// // Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\";\r\n// import { getAnalytics } from \"firebase/analytics\";\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyAB_4Zf8bVwCHT0VS8mLfKr7rPwlvNovQE\",\r\n//   authDomain: \"astrologically-a6df9.firebaseapp.com\",\r\n//   projectId: \"astrologically-a6df9\",\r\n//   storageBucket: \"astrologically-a6df9.appspot.com\",\r\n//   messagingSenderId: \"648031265378\",\r\n//   appId: \"1:648031265378:web:2d5de191dc007341b7a73b\",\r\n//   measurementId: \"G-KMQF8WY6LY\",\r\n// };\r\n\r\n// const app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n// export default analytics;\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDXAAHwIaM_8XEHhFtm8K4N6IIq75YZYtk\",\r\n  authDomain: \"astrootp-e1732.firebaseapp.com\",\r\n  projectId: \"astrootp-e1732\",\r\n  storageBucket: \"astrootp-e1732.appspot.com\",\r\n  messagingSenderId: \"170824197254\",\r\n  appId: \"1:170824197254:web:9fb7abbd086ac920975d07\",\r\n  measurementId: \"G-ZTJP3WZCQ3\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\nexport const auth = getAuth(app);\r\n","import React, { Fragment, Component } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport axios from \"axios\";\r\nimport axiosConfig from \"./../../axiosConfig\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport { Label, Input, Form, Button } from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\n// import OtpInput from \"react-otp-input\";\r\nimport { CgSpinner } from \"react-icons/cg\";\r\nimport { auth } from \"../../components/firbase_config\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\n\r\nexport default class LoginRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Register: \"Register\",\r\n      RegistrationView: true,\r\n      loginText: \"Login\",\r\n      fullname: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      dob: \"\",\r\n      gender: \"\",\r\n      city: \"\",\r\n      userimg: \"\",\r\n      selectedName: \"\",\r\n      password: \"\",\r\n      cnfrmpassword: \"\",\r\n      selectedFile: null,\r\n      otp: \"\",\r\n      otpMsg: \"\",\r\n    };\r\n  }\r\n  //Image Submit Handler\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    // console.log(event.target.files[0]);\r\n  };\r\n\r\n  otpHandler = () => {\r\n    console.log(this.state.mobile);\r\n    axiosConfig\r\n      .post(`/user/userVryfyotp`, {\r\n        mobile: parseInt(this.state.mobile),\r\n        otp: \"123456\",\r\n      })\r\n      .then((response) => {\r\n        console.log(\"@@@####\", response.data);\r\n        // let id = response.data.user;\r\n        if (response.data.status === true) {\r\n          this.setState({ otpMsg: response.data.msg });\r\n          localStorage.setItem(\r\n            \"userData\",\r\n            JSON.stringify(response?.data?.data)\r\n          );\r\n          localStorage.setItem(\"token\", JSON.stringify(response?.data?.token));\r\n          localStorage.setItem(\r\n            \"user_id\",\r\n            JSON.stringify(response?.data?.data?._id)\r\n          );\r\n          localStorage.setItem(\r\n            \"user_mobile_no\",\r\n            JSON.stringify(response?.data?.data?.mobile)\r\n          );\r\n          if (response.data.msg === \"otp verified\") {\r\n            swal(\"otp verified Successfully\");\r\n            // window.location.replace('/')\r\n            this.props.history.push(\"/\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //this.setState({ errormsg: error });\r\n      });\r\n  };\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  ConfigureCaptcha = () => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(\r\n      \"sign-in-button\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: (response) => {\r\n          console.log(response);\r\n          console.log(\"verified captcha\");\r\n        },\r\n        defaultCountry: \"IN\",\r\n      },\r\n      auth\r\n    );\r\n  };\r\n  onSignInSubmit = () => {\r\n    this.ConfigureCaptcha();\r\n    this.setState({ loginText: \"Wait\" });\r\n    const appVerifier = window.recaptchaVerifier;\r\n    let number = \"+91\" + this.state.mobile;\r\n    // console.log(number);\r\n    signInWithPhoneNumber(auth, number, appVerifier)\r\n      .then((confirmationResult) => {\r\n        // console.log(\"otp has been sent\", confirmationResult);\r\n        window.confirmationResult = confirmationResult;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        // Error; SMS not sent\r\n        this.setState({ loginText: \"Login\" });\r\n        // swal(\"SMS Not send\", \"Server Error\");\r\n        // ...\r\n      });\r\n  };\r\n\r\n  onOtpverify = (e) => {\r\n    e.preventDefault();\r\n    let code = this.state.otp;\r\n    window.confirmationResult\r\n      .confirm(code)\r\n      .then(async (res) => {\r\n        console.log(\"User_Verified\", res);\r\n        this.otpHandler();\r\n      })\r\n      .catch(async (err) => {\r\n        console.log(err);\r\n        const otptext = document.getElementById(\"otptext\");\r\n        otptext.innerText = \"OTP Does Not Match, Try again\";\r\n        // swal(\"Otp Does Not Veryfied\");\r\n      });\r\n  };\r\n\r\n  onResOtpverify = (e) => {\r\n    e.preventDefault();\r\n    let code = this.state.otp;\r\n    window.confirmationResult\r\n      .confirm(code)\r\n      .then(async (res) => {\r\n        console.log(\"User_Verified\", res);\r\n        this.finalstepRes();\r\n      })\r\n      .catch(async (err) => {\r\n        console.log(err);\r\n        const otptext = document.getElementById(\"otptext\");\r\n        otptext.innerText = \"OTP Does Not Match, Try again\";\r\n        // swal(\"Otp Does Not Veryfied\");\r\n      });\r\n  };\r\n\r\n  loginHandler = (e) => {\r\n    e.preventDefault();\r\n    let obj = {\r\n      mobile: parseInt(this.state.mobile),\r\n    };\r\n    axiosConfig\r\n      .post(`/user/userlogin`, obj)\r\n      .then((response) => {\r\n        console.log(\"userLogin\", response.data);\r\n        if (response.data.status === true) {\r\n          this.setState({ otpMsg: response.data.msg });\r\n          this.onSignInSubmit();\r\n\r\n          // swal(\"otp Send Successfully\");\r\n          // this.setState({ loginText: \"Wait\" });\r\n          // const otptext = document.getElementById(\"otptext\");\r\n          // otptext.innerText = \"Enter OTP below\";\r\n          // this.props.history.push('/')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        if (error.response?.data.msg === \"User doesn't Exist\") {\r\n          swal(\"Error!\", \"User doesn't Exist\", \"error\");\r\n          this.setState({ loginText: \"Login\" });\r\n        }\r\n        // const otptext = document.getElementById(\"signintext\");\r\n        // otptext.innerText = \"User Not Registered With This Number\";\r\n      });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  RegistrationOtpVerify = () => {\r\n    this.ConfigureCaptcha();\r\n    this.setState({ RegistrationView: false });\r\n    window.scrollTo(0, 0);\r\n    const appVerifier = window.recaptchaVerifier;\r\n    let number = \"+91\" + this.state.mobile;\r\n    // console.log(number);\r\n    signInWithPhoneNumber(auth, number, appVerifier)\r\n      .then((confirmationResult) => {\r\n        swal(\"otp has been sent\");\r\n        window.confirmationResult = confirmationResult;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        // Error; SMS not sent\r\n        this.setState({ Register: \"Register\" });\r\n\r\n        swal(\"OTP Not Send\", \"Some Error Occured Try again\");\r\n\r\n        // swal(\"SMS Not send\", \"Server Error\");\r\n        // ...\r\n      });\r\n  };\r\n\r\n  finalstepRes = () => {\r\n    const data = new FormData();\r\n    data.append(\"fullname\", this.state.fullname);\r\n    data.append(\"email\", this.state.email);\r\n    data.append(\"mobile\", this.state.mobile);\r\n    data.append(\"gender\", this.state.gender);\r\n    data.append(\"city\", this.state.city);\r\n    data.append(\"dob\", this.state.dob);\r\n    data.append(\"password\", this.state.password);\r\n    data.append(\"cnfmPassword\", this.state.cnfrmpassword);\r\n    if (this.state.selectedFile !== null) {\r\n      data.append(\"userimg\", this.state.selectedFile, this.state.selectedName);\r\n    }\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n    for (var key of data.keys()) {\r\n      console.log(key);\r\n    }\r\n\r\n    // this.setState({ otp: false });\r\n    if (this.state.password === this.state.cnfrmpassword) {\r\n      axiosConfig\r\n        .post(`/user/usersignup`, data)\r\n        .then((response) => {\r\n          console.log(response.data.msg);\r\n          localStorage.setItem(\"auth-token\", response.data.token);\r\n          this.setState({\r\n            // token: response.data.token,\r\n            otpMsg: response.data.otp,\r\n          });\r\n          swal(\"Success!\", \" Register Successful Done!\", \"success\");\r\n          this.props.history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data.message === \"already exists\");\r\n          if (error.response.data.message === \"already exists\") {\r\n            swal(\"user Already register with same mobile and email\");\r\n          }\r\n          // swal(\"Error!\", \"Something went wrong\", \"error\");\r\n        });\r\n    } else swal(\"Password and Confirm password does not match\");\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ Register: \"wait\" });\r\n    this.RegistrationOtpVerify();\r\n  };\r\n  render() {\r\n    // console.log(this.state.otp);\r\n    return (\r\n      <Fragment>\r\n        {/* <MetaTags>\r\n          <title>AstroVipra</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Compare page of flone react minimalist eCommerce template.\"\r\n          />\r\n        </MetaTags> */}\r\n        <LayoutOne headerTop=\"visible\">\r\n          <div id=\"recaptcha-container\"></div>\r\n          <div className=\"login-register-area pt-100 pb-100\">\r\n            <div className=\"container\">\r\n              <div className=\"row d-flex align-items-center justify-content-center\">\r\n                <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\r\n                  <div className=\"login-register-wrapper\">\r\n                    <Tab.Container defaultActiveKey=\"login\">\r\n                      <Nav variant=\"pills\" className=\"login-register-tab-list\">\r\n                        <Nav.Item>\r\n                          <Nav.Link eventKey=\"login\">\r\n                            <h4>Login</h4>\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                          <Nav.Link eventKey=\"register\">\r\n                            <h4>Register</h4>\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                      <Tab.Content>\r\n                        <Tab.Pane eventKey=\"login\">\r\n                          <div className=\"login-form-container\">\r\n                            {this.state.otpMsg === \"otp Send Successfully\" ? (\r\n                              <div className=\"login-register-form\">\r\n                                <div style={{ color: \"red\" }} id=\"otptext\">\r\n                                  Enter Otp Here\r\n                                </div>\r\n\r\n                                <Form onSubmit={(e) => this.onResOtpverify(e)}>\r\n                                  <Input\r\n                                    type=\"number\"\r\n                                    name=\"otp\"\r\n                                    required\r\n                                    placeholder=\"Enter otp\"\r\n                                    value={this.state.otp}\r\n                                    onChange={this.changeHandler}\r\n                                  />\r\n                                  <div className=\"button-box\">\r\n                                    <div className=\"login-toggle-btn\"></div>\r\n                                    <button type=\"submit\">\r\n                                      {/* <CgSpinner\r\n                                        className=\"mr-2 animate-spin\"\r\n                                        size={15}\r\n                                      /> */}\r\n                                      <span>Verify OTP </span>\r\n                                    </button>\r\n                                  </div>\r\n                                </Form>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"login-register-form\">\r\n                                <div\r\n                                  style={{ color: \"red\" }}\r\n                                  id=\"signintext\"\r\n                                ></div>\r\n                                <Form onSubmit={this.loginHandler}>\r\n                                  <div id=\"sign-in-button\"></div>\r\n                                  <Input\r\n                                    type=\"number\"\r\n                                    name=\"mobile\"\r\n                                    maxLength=\"12\"\r\n                                    required\r\n                                    placeholder=\"Enter Your Mobile No.\"\r\n                                    value={this.state.mobile}\r\n                                    onChange={this.changeHandler}\r\n                                  />\r\n                                  <div className=\"button-box\">\r\n                                    <div className=\"login-toggle-btn\"></div>\r\n                                    <button type=\"submit\">\r\n                                      <span>{this.state.loginText}</span>\r\n                                    </button>\r\n                                  </div>\r\n                                </Form>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </Tab.Pane>\r\n                        {/* Register the user now */}\r\n                        <Tab.Pane eventKey=\"register\">\r\n                          {this.state.RegistrationView ? (\r\n                            <>\r\n                              <div className=\"login-form-container\">\r\n                                <div className=\"login-register-form\">\r\n                                  <Form\r\n                                    className=\"text-center\"\r\n                                    onSubmit={this.submitHandler}\r\n                                    method=\"post\"\r\n                                  >\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"fullname\"\r\n                                      required\r\n                                      placeholder=\"Enter Your Fullname\"\r\n                                      value={this.state.fullname}\r\n                                      onChange={this.changeHandler}\r\n                                    />\r\n                                    <Input\r\n                                      type=\"email\"\r\n                                      name=\"email\"\r\n                                      required\r\n                                      placeholder=\"Enter Your Email\"\r\n                                      value={this.state.email}\r\n                                      onChange={this.changeHandler}\r\n                                    />\r\n                                    <Input\r\n                                      type=\"number\"\r\n                                      name=\"mobile\"\r\n                                      maxLength=\"12\"\r\n                                      required\r\n                                      placeholder=\"Enter Your Mobile No.\"\r\n                                      value={this.state.mobile}\r\n                                      onChange={this.changeHandler}\r\n                                    />\r\n                                    <Input\r\n                                      type=\"date\"\r\n                                      name=\"dob\"\r\n                                      required\r\n                                      placeholder=\"Date of birth\"\r\n                                      value={this.state.dob}\r\n                                      onChange={this.changeHandler}\r\n                                    />\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"city\"\r\n                                      required\r\n                                      placeholder=\"Enter city\"\r\n                                      value={this.state.city}\r\n                                      onChange={this.changeHandler}\r\n                                    />\r\n                                    <Input\r\n                                      type=\"password\"\r\n                                      name=\"password\"\r\n                                      required\r\n                                      placeholder=\"Enter Password\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.changeHandler}\r\n                                    />\r\n                                    <Input\r\n                                      type=\"password\"\r\n                                      name=\"cnfrmpassword\"\r\n                                      required\r\n                                      placeholder=\"Enter Confirm Password\"\r\n                                      value={this.state.cnfrmpassword}\r\n                                      onChange={this.changeHandler}\r\n                                    />\r\n                                    <Input\r\n                                      required\r\n                                      type=\"select\"\r\n                                      name=\"gender\"\r\n                                      placeholder=\"\"\r\n                                      value={this.state.gender}\r\n                                      onChange={this.changeHandler}\r\n                                    >\r\n                                      <option>Select Gender</option>\r\n                                      <option>Male</option>\r\n                                      <option>Female</option>\r\n                                    </Input>\r\n                                    <Label>User Image</Label>\r\n                                    <Input\r\n                                      type=\"file\"\r\n                                      name=\"userimg\"\r\n                                      onChange={this.onChangeHandler}\r\n                                    />\r\n                                    <div className=\"button-box\">\r\n                                      <Button type=\"submit\">\r\n                                        <span>{this.state.Register}</span>\r\n                                      </Button>\r\n                                    </div>\r\n                                  </Form>\r\n                                </div>\r\n                              </div>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <div className=\"login-register-form\">\r\n                                <div style={{ color: \"red\" }} id=\"otptext\">\r\n                                  Enter Otp Here\r\n                                </div>\r\n\r\n                                <Form onSubmit={(e) => this.onOtpverify(e)}>\r\n                                  <Input\r\n                                    type=\"number\"\r\n                                    name=\"otp\"\r\n                                    required\r\n                                    placeholder=\"Enter otp\"\r\n                                    value={this.state.otp}\r\n                                    onChange={this.changeHandler}\r\n                                  />\r\n                                  <div className=\"button-box\">\r\n                                    <div className=\"login-toggle-btn\"></div>\r\n                                    <Button\r\n                                      color=\"primary\"\r\n                                      className=\"mt-3\"\r\n                                      type=\"submit\"\r\n                                    >\r\n                                      {/* <CgSpinner\r\n                                        className=\"mr-2 animate-spin\"\r\n                                        size={15}\r\n                                      /> */}\r\n                                      <span>Verify OTP </span>\r\n                                    </Button>\r\n                                  </div>\r\n                                </Form>\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                        </Tab.Pane>\r\n                      </Tab.Content>\r\n                    </Tab.Container>\r\n                  </div>\r\n                  <>\r\n                    <div className=\"login-form-container\">\r\n                      <div className=\"login-register-form\">\r\n                        <div className=\"button-box\">\r\n                          <div className=\"login-toggle-btn\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutOne>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}